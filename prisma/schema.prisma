generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SquozeResponse {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  httpStatusCode Int
  header         String?
  errorMessage   String?
}

model Job {
  id                       Int                        @id @default(autoincrement())
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  name                     String                     @unique
  description              String?
  command                  String
  cronExpression           String
  active                   Boolean
  TickerThresholdObjective TickerThresholdObjective[]
}

enum CommandRunStatus {
  UNKNOWN
  ERROR
  SUCCESS
  NOT_RUN
}

enum CommandRunSrc {
  UNKNOWN
  CONSOLE
  DISCORD
  JOB
}

enum GitCommitStatus {
  UNKNOWN
  CLEAN
  DIRTY
}

enum CallerType {
  UNKNOWN
  HUMAN
  COMPUTER
}

model CommandRun {
  id              Int              @id @default(autoincrement())
  startedAt       DateTime
  endedAt         DateTime
  src             CommandRunSrc    @default(UNKNOWN)
  status          CommandRunStatus @default(UNKNOWN)
  command         String
  gitCommitHash   String
  gitCommitStatus GitCommitStatus  @default(UNKNOWN)
  stdout          String
  stderr          String
  exitCode        Int
  callerId        String?
  callerType      CallerType       @default(UNKNOWN)
}

model TickerThresholdObjective {
  id                  Int                   @id @default(autoincrement())
  symbol              String
  field               String
  lowerBound          Float?
  upperBound          Float?
  message             String?
  author              String?
  numNotifications    Int
  TickerThresholdData TickerThresholdData[]
  job                 Job?                  @relation(fields: [jobId], references: [id])
  jobId               Int?
}

model TickerThresholdData {
  id                         Int                      @id @default(autoincrement())
  recordedAt                 DateTime
  value                      Float
  tickerThresholdObjective   TickerThresholdObjective @relation(fields: [tickerThresholdObjectiveId], references: [id])
  tickerThresholdObjectiveId Int
  meta                       Json?
}
